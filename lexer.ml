# 1 "lexer.mll"
 
  (*COnverte o ficheiro para tokens*)
  open Lexing
  open Parser

  exception ErrorLexing of string

  let kwd_tbl = ["print", PRINT; "set", SET; "as", AS; "change", CHANGE; "to", TO;]

  let id_or_kwd s = try List.assoc s kwd_tbl with _ -> ID s

  let newline lexbuf =
    let pos = lexbuf.lex_curr_p in
    lexbuf.lex_curr_p <-
      { pos with pos_lnum = pos.pos_lnum + 1; pos_bol = pos.pos_cnum }

# 19 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
<<<<<<< HEAD
   "\000\000\244\255\245\255\246\255\247\255\248\255\249\255\250\255\
    \075\000\002\000\085\000\254\255\255\255";
=======
<<<<<<< HEAD
   "\000\000\245\255\246\255\247\255\248\255\249\255\250\255\251\255\
    \075\000\002\000\085\000\255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \003\000\002\000\001\000\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\255\255\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\009\000\011\000\009\000\000\000\000\000\000\000\000\000\
=======
   "\000\000\243\255\244\255\245\255\246\255\247\255\248\255\249\255\
    \250\255\075\000\002\000\085\000\254\255\255\255";
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \004\000\003\000\002\000\255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\255\255\255\255\000\000\000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
<<<<<<< HEAD
    \000\000\009\000\012\000\009\000\000\000\011\000\000\000\000\000\
=======
    \000\000\010\000\013\000\010\000\000\000\012\000\000\000\000\000\
>>>>>>> master
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \009\000\000\000\009\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\005\000\007\000\003\000\006\000\000\000\004\000\
    \008\000\008\000\008\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\008\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\008\000\008\000\008\000\008\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
<<<<<<< HEAD
    \255\255\000\000\000\000\009\000\255\255\000\000\255\255\255\255\
=======
<<<<<<< HEAD
    \255\255\000\000\000\000\009\000\255\255\255\255\255\255\255\255\
=======
    \255\255\000\000\000\000\010\000\255\255\000\000\255\255\255\255\
>>>>>>> master
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\009\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\008\000\008\000\008\000\008\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token lexbuf =
   __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 25 "lexer.mll"
         ( newline lexbuf; token lexbuf )
# 139 "lexer.ml"

  | 1 ->
# 26 "lexer.mll"
         ( token lexbuf )
# 144 "lexer.ml"

  | 2 ->
let
# 27 "lexer.mll"
             id
# 150 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 27 "lexer.mll"
                ( id_or_kwd id)
# 154 "lexer.ml"

  | 3 ->
# 28 "lexer.mll"
           ( token lexbuf )
# 159 "lexer.ml"

  | 4 ->
let
# 29 "lexer.mll"
<<<<<<< HEAD
        (PLUS)
=======
               i
# 165 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 29 "lexer.mll"
                 (INT (int_of_string i))
>>>>>>> master
# 169 "lexer.ml"

  | 5 ->
# 30 "lexer.mll"
<<<<<<< HEAD
        (PLUS)
=======
<<<<<<< HEAD
        (MINUS)
=======
        (EQ)
>>>>>>> master
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f
# 174 "lexer.ml"

  | 6 ->
# 31 "lexer.mll"
<<<<<<< HEAD
        (MINUS)
=======
<<<<<<< HEAD
        (TIMES)
=======
        (PLUS)
>>>>>>> master
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f
# 179 "lexer.ml"

  | 7 ->
# 32 "lexer.mll"
<<<<<<< HEAD
        (TIMES)
=======
<<<<<<< HEAD
        (DIV)
=======
        (MINUS)
>>>>>>> master
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f
# 184 "lexer.ml"

  | 8 ->
# 33 "lexer.mll"
<<<<<<< HEAD
        (DIV)
=======
<<<<<<< HEAD
        (COMMA)
=======
        (TIMES)
>>>>>>> master
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f
# 189 "lexer.ml"

  | 9 ->
# 34 "lexer.mll"
<<<<<<< HEAD
        (COMMA)
=======
<<<<<<< HEAD
        (EOF)
# 194 "lexer.ml"

  | 10 ->
let
# 35 "lexer.mll"
         c
# 200 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 35 "lexer.mll"
           (raise (let x = (Printf.sprintf "%c" c) in (ErrorLexing ("Unkown character " ^ x))))
# 204 "lexer.ml"
=======
        (DIV)
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f
# 194 "lexer.ml"

  | 10 ->
# 35 "lexer.mll"
        (EOF)
# 199 "lexer.ml"

  | 11 ->
let
# 36 "lexer.mll"
         c
# 205 "lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 36 "lexer.mll"
           (raise (let x = (Printf.sprintf "%c" c) in (ErrorLexing ("Unkown character " ^ x))))
<<<<<<< HEAD
# 209 "lexer.ml"
=======
# 214 "lexer.ml"
>>>>>>> master
>>>>>>> 90499690da7a70b67fc4195cfab689aee5a0dd4f

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

